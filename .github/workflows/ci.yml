name: Run CI

on:
  workflow_dispatch:
  push:
    paths:
      - '**.py'
  pull_request:
    paths:
      - '**.py'

jobs:
  create-test-data:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Restore test data cache
      id: restore-cache
      uses: actions/cache/restore@v4
      with:
        path: tests/data
        key: ${{ runner.os }}-test-data

    - name: Set up nox
      if: steps.restore-cache.outputs.cache-hit != 'true'
      uses: wntrblm/nox@main

    - name: Install uv
      if: steps.restore-cache.outputs.cache-hit != 'true'
      uses: astral-sh/setup-uv@v5

    - name: Create test data
      if: steps.restore-cache.outputs.cache-hit != 'true'
      run: nox -s create_test_data

    - name: Cache test data
      if: steps.restore-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: tests/data
        key: ${{ runner.os }}-test-data


  generate-jobs:
    runs-on: ubuntu-latest
    outputs:
      session: ${{ steps.set-matrix.outputs.session }}
    steps:
    - uses: actions/checkout@v4

    - uses: wntrblm/nox@main

    - id: set-matrix
      shell: bash
      run: echo session=$(nox --json -l | jq -c '[.[].session]') | tee --append $GITHUB_OUTPUT

  checks:
    name: Session ${{ matrix.session }}
    needs: [generate-jobs, create-test-data]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        session: ${{ fromJson(needs.generate-jobs.outputs.session) }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up nox
      uses: wntrblm/nox@main

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Restore test data cache
      uses: actions/cache/restore@v4
      with:
        path: tests/data
        key: ${{ runner.os }}-test-data
        fail-on-cache-miss: true

    - run: nox -s "${{ matrix.session }}"

  coverage:
    runs-on: ubuntu-latest
    needs: [create-test-data]
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up nox
        uses: wntrblm/nox@main

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Restore test data cache
        uses: actions/cache/restore@v4
        with:
          path: tests/data
          key: ${{ runner.os }}-test-data
          fail-on-cache-miss: true

      - name: Make coverage report
        run: nox -s coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
            fail_ci_if_error: true
            token: ${{ secrets.CODECOV_TOKEN }}